{"version":3,"sources":["shaders/fragment.glsl","resources/stl/e136-BASE_U.stl","Home.js","slides/Slide_1.js","slides/Slide_2.js","slides/Slide_3.js","App.js","serviceWorker.js","index.js","resources/stl/e016-LR1.stl","resources/stl/e017-LR2.stl","resources/stl/e018-LR3.stl","resources/stl/e019-LR4.stl","resources/stl/e020-LR5.stl","resources/stl/e021-LR6.stl","resources/stl/e022-LR7.stl","resources/stl/e024-LL1.stl","resources/stl/e025-LL2.stl","resources/stl/e026-LL3.stl","resources/stl/e027-LL4.stl","resources/stl/e028-LL5.stl","resources/stl/e029-LL6.stl","resources/stl/e030-LL7.stl","resources/stl/e137-BASE_L.stl"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","style","width","height","backgroundColor","Component","Slide_1","genericRenderWindow","vtkGenericRenderWindow","newInstance","background","setContainer","this","refs","renderer","getRenderer","renderWindow","getRenderWindow","reader","vtkSTLReader","setUrl","mandibleData","binary","then","e","mapper","vtkMapper","setInputData","getOutputData","actor","vtkActor","setMapper","addActor","resetCamera","render","resize","ref","Slide_2","LR1","LR2","LR3","LR4","LR5","LR6","LR7","LL1","LL2","LL3","LL4","LL5","LL6","LL7","forEach","path","idx","Slide_3","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","genericWindowCollection","targetCamera","getActiveCamera","shallowCopy","orthogonalizeViewUp","setParallelProjection","_this2","renderer0","renderWindow0","onModified","synchronizeCamera","renderer1","renderWindow1","depthCameraInteractorStyle","vtkInteractorStyleManipulator","removeAllManipulators","getInteractor","setInteractorStyle","mapper0","actor0","mapper1","getViewSpecificProperties","ShaderReplacements","FragmentShaderCode","fragmentShader","GeometryShaderCode","actor1","key","position","top","left","App","className","react_router_dom","react_router","exact","component","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4fd1e198.chunk.js","sourcesContent":["module.exports = \"//VTK::System::Dec\\n\\nuniform int PrimitiveIDOffset;\\n// VC position of this fragment\\n//VTK::PositionVC::Dec\\n\\n// optional color passed in from the vertex shader, vertexColor\\n//VTK::Color::Dec\\n\\n// optional surface normal declaration\\n//VTK::Normal::Dec\\n\\n// extra lighting parameters\\n//VTK::Light::Dec\\n\\n// Texture coordinates\\n//VTK::TCoord::Dec\\n\\n// picking support\\n//VTK::Picking::Dec\\n\\n// Depth Peeling Support\\n//VTK::DepthPeeling::Dec\\n\\n// clipping plane vars\\n//VTK::Clip::Dec\\n\\n// the output of this shader\\n//VTK::Output::Dec\\n\\n// Apple Bug\\n//VTK::PrimID::Dec\\n\\n// handle coincident offsets\\n//VTK::Coincident::Dec\\n\\n//VTK::ZBuffer::Dec\\n\\nvoid main()\\n{\\n  // VC position of this fragment. This should not branch/return/discard.\\n  //VTK::PositionVC::Impl\\n\\n  // Place any calls that require uniform flow (e.g. dFdx) here.\\n  //VTK::UniformFlow::Impl\\n\\n  // Set gl_FragDepth here (gl_FragCoord.z by default)\\n  //VTK::Depth::Impl\\n\\n  // Early depth peeling abort:\\n  //VTK::DepthPeeling::PreColor\\n\\n  // Apple Bug\\n  //VTK::PrimID::Impl\\n\\n  //VTK::Clip::Impl\\n\\n  //VTK::Color::Impl\\n\\n  // Generate the normal if we are not passed in one\\n  //VTK::Normal::Impl\\n\\n  //VTK::Light::Impl\\n\\n  //VTK::TCoord::Impl\\n\\n\\n  //Calcualte Depth, vertexVC is not normalized, need to use proper clipping range\\n  float zNear = 270.0f;\\n  float zFar = 275.9980426564987f;\\n  float vdf = 1.0f + (vertexVC.z + zNear) * (1.0f / (zFar-zNear));\\n\\n  gl_FragData[0] = vec4(vdf, vdf, vdf, 1.0f);\\n  \\n  if (gl_FragData[0].a <= 0.0)\\n    {\\n    discard;\\n    }\\n\\n  //VTK::DepthPeeling::Impl\\n\\n  //VTK::Picking::Impl\\n\\n  // handle coincident offsets\\n  //VTK::Coincident::Impl\\n\\n  //VTK::ZBuffer::Impl\\n}\\n\"","module.exports = __webpack_public_path__ + \"static/media/e136-BASE_U.96621110.stl\";","import React, {Component} from 'react';\n\n\nclass Home extends Component{\n\n    render(){\n        const style={\n            width:\"100%\",\n            height:\"100%\",\n            backgroundColor:\"darkblue\",\n        }\n\n        return(\n            <div style={style}> Home </div>\n        )\n    }\n}\n\n\nexport default Home","import React, {Component} from 'react';\nimport vtkActor from 'vtk.js/Sources/Rendering/Core/Actor';\nimport vtkGenericRenderWindow from 'vtk.js/Sources/Rendering/Misc/GenericRenderWindow';\nimport vtkMapper from 'vtk.js/Sources/Rendering/Core/Mapper';\nimport vtkSTLReader from 'vtk.js/Sources/IO/Geometry/STLReader';\n\nimport mandibleData from '../resources/stl/e137-BASE_L.stl';\n\nclass Slide_1 extends Component{\n\n    componentDidMount(){\n        const genericRenderWindow = vtkGenericRenderWindow.newInstance({\n            background: [1, 1, 1],\n        });\n        genericRenderWindow.setContainer(this.refs[\"renderer\"]);\n\n\n        const renderer = genericRenderWindow.getRenderer();\n        const renderWindow = genericRenderWindow.getRenderWindow();\n\n\n        //Import STL        \n        const reader = vtkSTLReader.newInstance();\n        reader.setUrl(mandibleData, {binary:false})\n        .then((e)=>{\n\n            const mapper = vtkMapper.newInstance();\n            mapper.setInputData(reader.getOutputData());\n\n            const actor = vtkActor.newInstance();\n            actor.setMapper(mapper);            \n\n            renderer.addActor(actor);\n            renderer.resetCamera();        \n            renderWindow.render();            \n            genericRenderWindow.resize();        \n        });        \n    }\n\n    render(){\n        const style={\n            width:\"100%\",\n            height:\"100%\",            \n        }\n\n        return(\n            <div ref=\"renderer\" style={style}/>\n        )\n    }\n}\n\n\nexport default Slide_1","import React, {Component} from 'react'\nimport vtkActor from 'vtk.js/Sources/Rendering/Core/Actor';\nimport vtkGenericRenderWindow from 'vtk.js/Sources/Rendering/Misc/GenericRenderWindow';\nimport vtkMapper from 'vtk.js/Sources/Rendering/Core/Mapper';\nimport vtkSTLReader from 'vtk.js/Sources/IO/Geometry/STLReader';\n\nimport maxilaData from '../resources/stl/e136-BASE_U.stl';\nimport mandibleData from '../resources/stl/e137-BASE_L.stl';\n\nimport LR1 from '../resources/stl/e016-LR1.stl';\nimport LR2 from '../resources/stl/e017-LR2.stl';\nimport LR3 from '../resources/stl/e018-LR3.stl';\nimport LR4 from '../resources/stl/e019-LR4.stl';\nimport LR5 from '../resources/stl/e020-LR5.stl';\nimport LR6 from '../resources/stl/e021-LR6.stl';\nimport LR7 from '../resources/stl/e022-LR7.stl';\n\nimport LL1 from '../resources/stl/e024-LL1.stl';\nimport LL2 from '../resources/stl/e025-LL2.stl';\nimport LL3 from '../resources/stl/e026-LL3.stl';\nimport LL4 from '../resources/stl/e027-LL4.stl';\nimport LL5 from '../resources/stl/e028-LL5.stl';\nimport LL6 from '../resources/stl/e029-LL6.stl';\nimport LL7 from '../resources/stl/e030-LL7.stl';\n\n\n\n\nclass Slide_2 extends Component{\n\n    componentDidMount(){\n        const genericRenderWindow = vtkGenericRenderWindow.newInstance({\n            background: [1, 1, 1],\n        });\n        genericRenderWindow.setContainer(this.refs[\"renderer\"]);\n\n\n        const renderer = genericRenderWindow.getRenderer();\n        const renderWindow = genericRenderWindow.getRenderWindow();\n\n\n        //Import STL        \n        const reader = vtkSTLReader.newInstance();\n\n        const data = [LR1, LR2, LR3, LR4, LR5, LR6, LR7, LL1, LL2, LL3, LL4, LL5, LL6, LL7];\n\n        data.forEach((path, idx)=>{\n            reader.setUrl(path, {binary:false})\n            .then((e)=>{\n    \n                const mapper = vtkMapper.newInstance();\n                mapper.setInputData(reader.getOutputData());\n    \n                const actor = vtkActor.newInstance();\n                actor.setMapper(mapper);                \n    \n                renderer.addActor(actor);\n                renderer.resetCamera();        \n                renderWindow.render();            \n                genericRenderWindow.resize();        \n            });\n        })        \n    }\n\n    render(){\n\n        const style={\n            width:\"100%\",\n            height:\"100%\",            \n        }\n\n        return(\n            <div ref=\"renderer\" style={style}/>\n        )\n    }\n};\n\nexport default Slide_2","import React, {Component} from 'react'\nimport vtkActor from 'vtk.js/Sources/Rendering/Core/Actor';\nimport vtkGenericRenderWindow from 'vtk.js/Sources/Rendering/Misc/GenericRenderWindow';\nimport vtkInteractorStyleManipulator from 'vtk.js/Sources/Interaction/Style/InteractorStyleManipulator';\nimport vtkMapper from 'vtk.js/Sources/Rendering/Core/Mapper';\nimport vtkSTLReader from 'vtk.js/Sources/IO/Geometry/STLReader';\n\nimport LR1 from '../resources/stl/e016-LR1.stl';\nimport LR2 from '../resources/stl/e017-LR2.stl';\nimport LR3 from '../resources/stl/e018-LR3.stl';\nimport LR4 from '../resources/stl/e019-LR4.stl';\nimport LR5 from '../resources/stl/e020-LR5.stl';\nimport LR6 from '../resources/stl/e021-LR6.stl';\nimport LR7 from '../resources/stl/e022-LR7.stl';\n\nimport LL1 from '../resources/stl/e024-LL1.stl';\nimport LL2 from '../resources/stl/e025-LL2.stl';\nimport LL3 from '../resources/stl/e026-LL3.stl';\nimport LL4 from '../resources/stl/e027-LL4.stl';\nimport LL5 from '../resources/stl/e028-LL5.stl';\nimport LL6 from '../resources/stl/e029-LL6.stl';\nimport LL7 from '../resources/stl/e030-LL7.stl';\nimport fragmentShader from '../shaders/fragment.glsl';\n\nclass Slide_3 extends Component{\n\n    constructor(props){\n        super(props);\n\n        \n\n        this.genericWindowCollection = [vtkGenericRenderWindow.newInstance({background: [1,1,1]}), vtkGenericRenderWindow.newInstance({background: [0,0,0]})];\n\n    }\n\n    synchronizeCamera(e){        \n\n        const targetCamera = this.genericWindowCollection[1].getRenderer().getActiveCamera();\n        targetCamera.shallowCopy(e);\n        targetCamera.orthogonalizeViewUp();\n        targetCamera.setParallelProjection(true);\n\n        this.genericWindowCollection[1].getRenderWindow().render();\n    }\n\n    componentDidMount(){\n         \n        ////Initialize Renderer\n        this.genericWindowCollection[0].setContainer(this.refs[\"renderer1\"]);\n        this.genericWindowCollection[1].setContainer(this.refs[\"renderer2\"]);\n\n        const renderer0 = this.genericWindowCollection[0].getRenderer();\n        const renderWindow0 = this.genericWindowCollection[0].getRenderWindow();\n        renderer0.getActiveCamera().onModified(e=>{this.synchronizeCamera(e)});\n\n        const renderer1 = this.genericWindowCollection[1].getRenderer();\n        const renderWindow1 = this.genericWindowCollection[1].getRenderWindow();\n        renderer1.getActiveCamera().setParallelProjection(false);\n        const depthCameraInteractorStyle = vtkInteractorStyleManipulator.newInstance();\n        depthCameraInteractorStyle.removeAllManipulators();\n        this.genericWindowCollection[1].getInteractor().setInteractorStyle(depthCameraInteractorStyle);\n\n\n\n        //Import STL        \n        const reader = vtkSTLReader.newInstance();\n\n        const data = [LR1, LR2, LR3, LR4, LR5, LR6, LR7, LL1, LL2, LL3, LL4, LL5, LL6, LL7];\n\n        data.forEach((path, idx)=>{\n            reader.setUrl(path, {binary:false})\n            .then((e)=>{    \n                const mapper0 = vtkMapper.newInstance();\n                mapper0.setInputData(reader.getOutputData());\n                const actor0 = vtkActor.newInstance();\n                actor0.setMapper(mapper0);    \n                renderer0.addActor(actor0);\n\n                const mapper1 = vtkMapper.newInstance();\n                mapper1.setInputData(reader.getOutputData());\n\n                const mapperSpecificProp = mapper1.getViewSpecificProperties();\n                mapperSpecificProp['OpenGL'] = {\n                    ShaderReplacements: [],\n                    // VertexShaderCode: vertexShader,\n                    FragmentShaderCode:fragmentShader,\n                    GeometryShaderCode: ''\n                };\n\n\n                const actor1 = vtkActor.newInstance();\n                actor1.setMapper(mapper1);\n                renderer1.addActor(actor1);\n                \n                \n                \n                \n                renderer1.addActor(actor1);\n                \n                \n                renderer0.resetCamera();\n                renderer1.resetCamera();\n\n                renderWindow0.render();            \n                renderWindow1.render();\n                \n                this.genericWindowCollection[0].resize();\n                this.genericWindowCollection[1].resize();\n            });\n        })\n\n        this.genericWindowCollection[0].resize();\n    }\n\n    render(){\n        const renderer1Style={\n            width:\"50%\",\n            height:\"100%\",\n            backgroundColor:'red',\n        }\n        const renderer2Style={\n            position:'absolute',\n            top:0,\n            left:'50%',\n            width:'50%',\n            height:'100%',\n            backgroundColor:'blue',\n        }\n\n\n        return(            \n            [\n                (<div ref=\"renderer1\" style={renderer1Style} key={0}/>),\n                (<div ref=\"renderer2\" style={renderer2Style} key={1}/>)            \n            ]\n        )\n    }\n};\n\nexport default Slide_3","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport Slide_1 from './slides/Slide_1';\nimport Slide_2 from './slides/Slide_2';\nimport Slide_3 from './slides/Slide_3';\nimport {HashRouter as Router, Route} from 'react-router-dom';\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">      \n      <Router>\n        <Route exact path = \"/\" component={Home}/>\n        <Route path = \"/1\" component={Slide_1}/>\n        <Route path = \"/2\" component={Slide_2}/>\n        <Route path = \"/3\" component={Slide_3}/>\n      </Router>\n    </div>\n    \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/e016-LR1.37cc0132.stl\";","module.exports = __webpack_public_path__ + \"static/media/e017-LR2.2b2bd9cc.stl\";","module.exports = __webpack_public_path__ + \"static/media/e018-LR3.df888cfb.stl\";","module.exports = __webpack_public_path__ + \"static/media/e019-LR4.d34c2272.stl\";","module.exports = __webpack_public_path__ + \"static/media/e020-LR5.687387de.stl\";","module.exports = __webpack_public_path__ + \"static/media/e021-LR6.83f98640.stl\";","module.exports = __webpack_public_path__ + \"static/media/e022-LR7.518da38d.stl\";","module.exports = __webpack_public_path__ + \"static/media/e024-LL1.b4d5d1d4.stl\";","module.exports = __webpack_public_path__ + \"static/media/e025-LL2.fffbf8e5.stl\";","module.exports = __webpack_public_path__ + \"static/media/e026-LL3.a0dc4869.stl\";","module.exports = __webpack_public_path__ + \"static/media/e027-LL4.3f978ca6.stl\";","module.exports = __webpack_public_path__ + \"static/media/e028-LL5.078dacd4.stl\";","module.exports = __webpack_public_path__ + \"static/media/e029-LL6.6a245a79.stl\";","module.exports = __webpack_public_path__ + \"static/media/e030-LL7.b32c9b16.stl\";","module.exports = __webpack_public_path__ + \"static/media/e137-BASE_L.ffa9179d.stl\";"],"sourceRoot":""}